syntax on

set noerrorbells
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set nu
set nowrap
set smartcase
set noswapfile
set nobackup
set undodir=~/.config/neovim/undodir
set undofile
set incsearch
set number                     " Show current line number
set relativenumber             " Show relative line numbers
set spell
set spelllang=en_gb
set cursorline
set cursorcolumn
set modifiable
set autoread
let NERDTreeShowHidden=1

" Settings for VIMWIKI
" https://github.com/vimwiki/vimwiki#installation 
set nocompatible
filetype plugin on
syntax on
let g:vimwiki_list = [{'path': '~/Documents/Knowlegebase/SITS/sitsWiki'}]

" Key Mappings
let mapleader = "\\"
nnoremap <leader>nt :NERDTree<CR>
nnoremap <leader>ut :UndotreeShow<CR>

" Telescope Maps
nnoremap <leader>ff :Telescope find_files find_command=rg,--ignore,--hidden,--files<CR>
" nnoremap <leader>fc :Telescope find_files find_command=rg,--ignore,--hidden,--files<CR>
nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>
nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>
nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>


" Harpoon Maps
nnoremap <leader>ha :lua require("harpoon.mark").add_file()<CR>
nnoremap <leader>he :lua require("harpoon.ui").toggle_quick_menu()<CR>
nnoremap <leader>hm :lua require("harpoon.cmd-ui").toggle_quick_menu()<CR>

nnoremap <C-h> :lua require("harpoon.ui").nav_file(1)<CR>
nnoremap <C-j> :lua require("harpoon.ui").nav_file(2)<CR>
nnoremap <C-k> :lua require("harpoon.ui").nav_file(3)<CR>
nnoremap <C-l> :lua require("harpoon.ui").nav_file(4)<CR>

" Delete an IP Address
nnoremap <leader>dip d7w
"noremap  <leader>ww :set linebreak
" Move lines up and down with <ALT> J and K
" https://vim.fandom.com/wiki/Moving_lines_up_or_down#Move_command
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Run the current line as if it were a command
nnoremap <leader>e :exe getline(line('.'))<cr>

noremap <leader>U :UndotreeShow<CR>

" Highlight on YANK
" https://jdhao.github.io/2020/05/22/highlight_yank_region_nvim/
augroup highlight_yank
    autocmd!
    au TextYankPost * silent! lua vim.highlight.on_yank{higroup="IncSearch", timeout=200}
augroup END


" Plugins
call plug#begin('~/.config/nvim/plugged')

" GoogleDocs
" https://github.com/Aadv1k/gdoc.vim
Plug 'aadv1k/gdoc.vim', {'do': './install.py'}

let g:path_to_creds = '~/.config/nvim/GCreds.json' " this is required
let g:gdoc_file_path = '~/Documents/.googleDocs/' " optional; default is ./
let g:token_directory = '~/Documents/.googleDocs/' " optional; default is ./

nnoremap <leader>gw :Gdoc write<cr>
nnoremap <leader>gs :Gdoc sync<cr>
":Gdoc write
"Gdoc sync



" Plug 'jremmen/vim-ripgrep'
" Plug 'tpop/vim-fugitive'
" Plug 'lyuts/vim-rtags'
Plug 'mbbill/undotree'
" Plug 'vim-airline/vim-airline'
Plug 'itchyny/lightline.vim'
Plug 'mbbill/undotree'
Plug 'ryanoasis/vim-devicons'
Plug 'preservim/nerdtree'

" Telescope Requirements
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-telescope/telescope-fzf-native.nvim', { 'do': 'make' }
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'nvim-telescope/telescope-file-browser.nvim'

" LSP
Plug 'neovim/nvim-lspconfig'

" CSV Viewer
Plug 'chrisbra/csv.vim'

" Themes 
Plug 'folke/tokyonight.nvim', { 'branch': 'main' }
" Plug 'arcticicestudio/nord-vim'
" Plug 'morhetz/gruvbox'
" colorscheme nord
" colorscheme gruvbox

let g:airline_powerline_fonts = 1
let g:lightline = {'colorscheme': 'tokyonight'}
" Set up Tokyo Night Theme
let g:tokyonight_style = "storm"
let g:tokyonight_italic_functions = 1
let g:tokyonight_sidebars = [ "qf", "vista_kind", "terminal", "packer" ]

" Change the "hint" color to the "orange" color, and make the "error" color bright red
let g:tokyonight_colors = {
  \ 'hint': 'orange',
  \ 'error': '#ff0000'
\ }


" Telescope Plug-ins
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}  " We recommend updating the parsers on update
Plug 'nvim-telescope/telescope-fzf-native.nvim', { 'do': 'make' }

" Harpoon
Plug 'nvim-lua/plenary.nvim' " don't forget to add this one if you don't have it yet!
Plug 'nvim-lua/popup.nvim'
Plug 'ThePrimeagen/harpoon'


" TPopes Plugins (https://github.com/tpope)
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'


" vimwiki
" https://github.com/vimwiki/vimwiki#installation
Plug 'vimwiki/vimwiki'
function! VimwikiFindIncompleteTasks()
  lvimgrep /- \[ \]/ %:p
  lopen
endfunction

function! VimwikiFindAllIncompleteTasks()
  VimwikiSearch /- \[ \]/
  lopen
endfunction

nmap <Leader>wa :call VimwikiFindAllIncompleteTasks()<CR>
nmap <Leader>wx :call VimwikiFindIncompleteTasks()<CR>
nnoremap <leader>ws :VimwikiSearch 
nnoremap <leader>wsn :lnext<cr>
nnoremap <leader>wsp :lprev<cr>

call plug#end()

"=================="

" Telescope Config
lua << EOF
require('telescope').setup{
    defaults = {
        prompt_prefix = "> ",
    },

-- require('telescope').load_extension('fzf.vim'), -- Install ripgrep for this to work

prompt_prefix = "> ",
color_devicons = true,
file_previewer = require'telescope.previewers'.vim_buffer_cat.new,
grep_previewer = require'telescope.previewers'.vim_buffer_vimgrep.new,
qflist_previewer = require'telescope.previewers'.vim_buffer_qflist.new,
-- Developer configurations: Not meant for general override
buffer_previewer_maker = require'telescope.previewers'.buffer_previewer_maker


}
EOF


" call plug#begin(s:plug_dir)
Plug 'neovim/nvim-lspconfig'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'
Plug 'hrsh7th/nvim-cmp'

" For vsnip users.
Plug 'hrsh7th/cmp-vsnip'
Plug 'hrsh7th/vim-vsnip'

" For luasnip users.
" Plug 'L3MON4D3/LuaSnip'
" Plug 'saadparwaiz1/cmp_luasnip'

" For ultisnips users.
" Plug 'SirVer/ultisnips'
" Plug 'quangnguyen30192/cmp-nvim-ultisnips'

" For snippy users.
" Plug 'dcampos/nvim-snippy'
" Plug 'dcampos/cmp-snippy'

call plug#end()

"=================="
" Load the colorscheme
colorscheme tokyonight
